{"name":"Node-CTA-Bus-Tracker","tagline":"A Node.js package for the Chicago Transit Authority's bus tracker API","body":"A Node.js package for the Chicago Transit Authority's bus tracker API. For complete details regarding the data returned for each method, check out the CTA's documentation: [http://www.transitchicago.com/assets/1/developer_center/BusTime_Developer_API_Guide.pdf](http://www.transitchicago.com/assets/1/developer_center/BusTime_Developer_API_Guide.pdf)\r\n\r\n### Key Features\r\n\r\n* JSON is returned instead of the CTA's crappy XML\r\n* All date properties are converted from strings formatted like \"YYYYMMDD HH:MM:SS\" to a normal JavaScript date strings like \"2014-08-30T14:53:34-05:00\"\r\n\r\n\r\n#### Install It\r\n```\r\nnpm install cta-bus-tracker\r\n```\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Require It\r\n```javascript\r\nvar cta = require( \"cta-bus-tracker\" );\r\n```\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Initialize It\r\n```javascript\r\nvar busTracker = cta( \"your CTA API KEY\" );\r\n```\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Time\r\n```javascript\r\nbusTracker.time( function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n```\r\n\r\n**Example data:**\r\n~~~javascript\r\n\"2014-08-30T14:53:34-05:00\"\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Vehicles By ID\r\n~~~javascript\r\n// a list of up to 10 vehicle IDs\r\nvar vehicleIds = [ \"1973\" ];\r\n\r\nbusTracker.vehiclesById( vehicleIds, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n{\r\n    vid: '1973',\r\n    tmstmp: '2014-08-30T14:55:00-05:00',\r\n    lat: '41.949149812970845',\r\n    lon: '-87.64872932434082',\r\n    hdg: '287',\r\n    pid: '4735',\r\n    rt: '8',\r\n    des: '79th',\r\n    pdist: '318',\r\n    spd: '0',\r\n    tablockid: '8 -752',\r\n    tatripid: '139',\r\n    zone: ''\r\n}\r\n~~~\r\n\r\n**Note:** If more than one vehicle ID is provided *data* will be an array of objects.\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Vehicles By route\r\n~~~javascript\r\n// a list of up to 10 vehicle IDs\r\nvar routeIds = [ \"8\" ];\r\n\r\nbusTracker.vehiclesById( routeIds, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        vid: '1973',\r\n        tmstmp: '2014-08-30T15:05:00-05:00',\r\n        lat: '41.93126130439866',\r\n        lon: '-87.64894748741472',\r\n        hdg: '173',\r\n        pid: '4735',\r\n        rt: '8',\r\n        des: '79th',\r\n        pdist: '7027',\r\n        spd: '23',\r\n        tablockid: '8 -752',\r\n        tatripid: '139',\r\n        zone: ''\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Routes\r\n~~~javascript\r\nbusTracker.routes( function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        rt: '1',\r\n        rtnm: 'Bronzeville/Union Station',\r\n        rtclr: '#336633'\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Route Directions\r\n~~~javascript\r\nvar routeId = \"1\";\r\n\r\nbusTracker.routeDirections( routeId, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    'Northbound',\r\n    'Southbound'\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Stops\r\n~~~javascript\r\nvar routeId = \"1\";\r\nvar routeDirection = \"Northbound\";\r\n\r\nbusTracker.stops( routeId, routeDirection, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        stpid: '1577',\r\n        stpnm: '1509 S Michigan',\r\n        lat: '41.861838603628',\r\n        lon: '-87.623975872993'\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Patterns By ID\r\n~~~javascript\r\n// a list of up to 10 pattern IDs\r\nvar parrernIds = [ \"4735\" ];\r\n\r\nbusTracker.patternsById( patternIds, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n{\r\n    pid: '4735',\r\n    ln: '74252.0',\r\n    rtdir: 'Southbound',\r\n    pt:\r\n    [\r\n        {\r\n            seq: '1',\r\n            lat: '41.949815854453',\r\n            lon: '-87.649156451225',\r\n            typ: 'S',\r\n            stpid: '5756',\r\n            stpnm: 'Halsted & Waveland/Broadway Terminal',\r\n            pdist: '0.0'\r\n        },\r\n        ...\r\n    ]\r\n}\r\n~~~\r\n\r\n**Note:** If more than one pattern ID is provided *data* will be an array of objects.\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Patterns By Route\r\n~~~javascript\r\n// a list of up to 10 pattern IDs\r\nvar routeId = \"1\";\r\n\r\nbusTracker.patternsByRoute( routeId, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        pid: '4735',\r\n        ln: '74252.0',\r\n        rtdir: 'Southbound',\r\n        pt:\r\n        [\r\n            {\r\n                seq: '1',\r\n                lat: '41.949815854453',\r\n                lon: '-87.649156451225',\r\n                typ: 'S',\r\n                stpid: '5756',\r\n                stpnm: 'Halsted & Waveland/Broadway Terminal',\r\n                pdist: '0.0'\r\n            },\r\n            ...\r\n        ]\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Predictions By Stop\r\n~~~javascript\r\nvar options = {\r\n    // a list of up to 10 stop IDs\r\n    stopIds: [ \"1577\" ],\r\n    // topCount is optional\r\n    topCount: 5\r\n};\r\n\r\nbusTracker.predictionsByStop( options, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        tmstmp: '2014-08-30T15:26:00-05:00',\r\n        typ: 'A',\r\n        stpnm: '1509 S Michigan',\r\n        stpid: '1577',\r\n        vid: '1261',\r\n        dstp: '7564',\r\n        rt: '4',\r\n        rtdir: 'Northbound',\r\n        des: 'Illinois Center',\r\n        prdtm: '2014-08-30T15:34:00-05:00',\r\n        tablockid: '4 -715',\r\n        tatripid: '126',\r\n        zone: ''\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Predictions By Vehicle\r\n~~~javascript\r\nvar options = {\r\n    // a list of up to 10 vehicle IDs\r\n    vehicleIds: [ \"1230\" ],\r\n    // topCount is optional\r\n    topCount: 5\r\n};\r\n\r\nbusTracker.predictionsByVehicle( options, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        tmstmp: '2014-08-30T15:31:00-05:00',\r\n        typ: 'A',\r\n        stpnm: 'Halsted & Addison',\r\n        stpid: '14901',\r\n        vid: '1230',\r\n        dstp: '86',\r\n        rt: '8',\r\n        rtdir: 'Southbound',\r\n        des: '79th',\r\n        prdtm: '2014-08-30T15:31:00-05:00',\r\n        tablockid: '8 -706',\r\n        tatripid: '145',\r\n        zone: ''\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Service Bulletins By Route\r\n~~~javascript\r\nvar options = {\r\n    // a list of up to 10 route IDs\r\n    routeIds: [ \"1\" ],\r\n    // routeDirection is optional\r\n    routeDirection: \"Northbound\"\r\n};\r\n\r\nbusTracker.serviceBulletinsByRoute( options, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        nm: '#36 Broadway - Bus Stop Relocation',\r\n        sbj: ' Bus Stop Relocation',\r\n        dtl: 'Effective Wed, May 7<br/><br/>The northbound #36 bus stop on the northeast corner at Broadway/Granville has been relocated to the southeast corner at Broadway/Granville.<br/> <br/>',\r\n        brf: '',\r\n        prty: 'Low'\r\n    },\r\n    ...\r\n]\r\n~~~\r\n\r\n\r\n---------------------------\r\n\r\n\r\n#### Service Bulletins By Route\r\n~~~javascript\r\n// a list of up to 10 stop IDs\r\nvar stopIds = [ \"1577\" ];\r\n\r\nbusTracker.serviceBulletinsByStop( stopIds, function ( err, data ) {\r\n    if ( err ) {\r\n        // handle error\r\n    }\r\n    // use data\r\n} );\r\n~~~\r\n\r\n**Example data:**\r\n~~~javascript\r\n[\r\n    {\r\n        nm: '3 K. Drive buses are temp rerouted at K Drive/79th',\r\n        sbj: '# 3 King Drive buses rerouted',\r\n        dtl: '#3 King Drive buses are temporarily rerouted in both directions via King Drive, 79th, Cottage Grove, 83rd, and King Drive, due to street blockage.<br/><br/>Allow extra travel time.<br/> <br/>',\r\n        brf: '',\r\n        prty: 'Medium',\r\n        srvc: { rt: '3' }\r\n    },\r\n    ...\r\n]\r\n~~~\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}